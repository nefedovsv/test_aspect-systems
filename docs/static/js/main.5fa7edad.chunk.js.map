{"version":3,"sources":["interfaces/index.tsx","constants/index.ts","reducers/function/changeState.ts","reducers/function/validateFunction.ts","reducers/initialState.ts","store/configureStore.tsx","reducers/index.tsx","components/InsidePanelComponent.tsx","components/ButtonComponent.tsx","components/LabelComponent.tsx","components/InsideComponent.tsx","components/PanelComponent.tsx","components/Content.tsx","components/AppContainer/App.tsx","components/AppContainer/AppContainer.ts","action/index.tsx","index.tsx","components/AppContainer/App.module.css","components/styles/Content.module.css"],"names":["ElementType","SEND_USER","changeState","store","way","prop","value","numberElement","Number","charAt","content","slice","props","insertNewElement","element","checkElement","type","RegExp","test","parserObject","numbers","match","text","split","panel","width","height","visible","label","caption","button","validate","state","change_property","newValue","initialState","user","value1","value2","createStore","action","payload","newState","newElement","applyMiddleware","logger","InsidePanelComponent","style","getStyle","this","data","React","ButtonComponent","className","styles","box","LabelComponent","InsideComponent","map","item","index","key","filter","Boolean","PanelComponent","border","margin","Content","list","App","onChange","e","setState","currentTarget","name","onSubmit","preventDefault","sendUser","input","addonBefore","placeholder","defaultValue","htmlType","onClick","AppContainer","connect","dispatch","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5fa7edad.chunk.js","sourcesContent":["import { SEND_USER } from \"../constants/index\";\r\n\r\nexport interface SendUserAction {\r\n  type: typeof SEND_USER;\r\n  payload: { value1: string; value2: string };\r\n}\r\n\r\nexport enum ElementType {\r\n  panel = \"panel\",\r\n  label = \"label\",\r\n  button = \"button\"\r\n}\r\n\r\nexport interface IProperty {\r\n  width?: number;\r\n  height?: number;\r\n  visible: boolean;\r\n  caption?: string;\r\n}\r\n\r\nexport interface IElement {\r\n  type: ElementType;\r\n  props: IProperty;\r\n  content?: IElement[];\r\n}\r\n\r\nexport interface IStore {\r\n  content: Array<IElement>;\r\n  user: { value1: string; value2: string };\r\n}\r\n","export const SEND_USER = \"SEND_USER\";\r\n","import { IStore, IElement } from \"../../interfaces/index\";\r\n\r\nexport const changeState = function(\r\n  store: IStore,\r\n  way: string,\r\n  prop: string,\r\n  value: string | number | boolean\r\n): IStore {\r\n  const numberElement = Number(way.charAt(8));\r\n  return {\r\n    ...store,\r\n    content: [\r\n      ...store.content.slice(0, numberElement),\r\n      ...[\r\n        {\r\n          ...store.content[numberElement],\r\n          props: {\r\n            ...store.content[numberElement].props,\r\n            [prop]: value\r\n          }\r\n        }\r\n      ],\r\n      ...store.content.slice(numberElement + 1)\r\n    ]\r\n  };\r\n};\r\n\r\nexport const insertNewElement = function(\r\n  store: IStore,\r\n  element: IElement\r\n): IStore {\r\n  return {\r\n    ...store,\r\n    content: [\r\n      {\r\n        ...store.content[0],\r\n\r\n        content: [...store.content[0].content!, element]\r\n      },\r\n      ...store.content.slice(1)\r\n    ]\r\n  };\r\n};\r\n","import { IStore, IElement, ElementType } from \"../../interfaces/index\";\r\nimport { changeState } from \"./changeState\";\r\n\r\nfunction checkElement(type: ElementType, value: string): boolean {\r\n  const regExp: RegExp = new RegExp(type, \"gm\");\r\n  return regExp.test(value) && /true/gm.test(value);\r\n}\r\n\r\nexport const parserObject = function(value: string): IElement | null {\r\n  const numbers: string[] | null = value.match(/\\d+/g);\r\n  const text = value\r\n    .split(\":\")[3]\r\n    .split(\",\")[0]\r\n    .slice(1, -1);\r\n\r\n  if (checkElement(ElementType.panel, value)) {\r\n    if (numbers) {\r\n      return {\r\n        type: ElementType.panel,\r\n        props: {\r\n          width: Number(numbers[0]),\r\n          height: Number(numbers[1]),\r\n          visible: true\r\n        }\r\n      };\r\n    }\r\n  } else if (checkElement(ElementType.label, value)) {\r\n    return {\r\n      type: ElementType.label,\r\n      props: {\r\n        caption: text,\r\n        visible: true\r\n      }\r\n    };\r\n  } else if (checkElement(ElementType.button, value)) {\r\n    if (numbers) {\r\n      return {\r\n        type: ElementType.button,\r\n        props: {\r\n          width: Number(numbers[0]),\r\n          height: Number(numbers[1]),\r\n          visible: true\r\n        }\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const validate = function(\r\n  state: IStore,\r\n  change_property: string,\r\n  newValue: string\r\n): IStore {\r\n  if (\r\n    /^[0-9]+$/gm.test(newValue) === true &&\r\n    /width$/gm.test(change_property)\r\n  ) {\r\n    const rez: IStore = changeState(\r\n      state,\r\n      change_property,\r\n      \"width\",\r\n      Number(newValue)\r\n    );\r\n    return rez;\r\n  } else if (\r\n    /^[0-9]+$/gm.test(newValue) === true &&\r\n    /height$/gm.test(change_property)\r\n  ) {\r\n    const rez: IStore = changeState(\r\n      state,\r\n      change_property,\r\n      \"height\",\r\n      Number(newValue)\r\n    );\r\n    return rez;\r\n  } else if (\r\n    /^true|false$/gm.test(newValue) === true &&\r\n    /visible$/gm.test(change_property) === true\r\n  ) {\r\n    if (newValue.charAt(0) === \"t\") {\r\n      const rez = changeState(state, change_property, \"visible\", true);\r\n      return rez;\r\n    } else {\r\n      const rez = changeState(state, change_property, \"visible\", false);\r\n      return rez;\r\n    }\r\n  } else if (/caption$/gm.test(change_property)) {\r\n    const rez = changeState(state, change_property, \"caption\", newValue);\r\n    return rez;\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n","import { IStore, ElementType } from \"../interfaces/index\";\r\n\r\nexport const initialState: IStore = {\r\n  user: { value1: \"\", value2: \"\" },\r\n  content: [\r\n    {\r\n      type: ElementType.panel,\r\n      props: {\r\n        width: 800,\r\n        height: 600,\r\n        visible: true\r\n      },\r\n      content: []\r\n    },\r\n    {\r\n      type: ElementType.label,\r\n      props: {\r\n        caption: \"Aspect Ryazan\",\r\n        visible: true\r\n      }\r\n    },\r\n    {\r\n      type: ElementType.button,\r\n      props: {\r\n        width: 120,\r\n        height: 35,\r\n        visible: true\r\n      }\r\n    }\r\n  ]\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers\";\r\nimport logger from \"redux-logger\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(logger));\r\n","import { IStore, SendUserAction, IElement } from \"../interfaces/index\";\r\nimport { SEND_USER } from \"../constants/index\";\r\nimport { parserObject, validate } from \"./function/validateFunction\";\r\nimport { insertNewElement } from \"./function/changeState\";\r\nimport { initialState } from \"./initialState\";\r\n\r\nexport function rootReducer(\r\n  state = initialState,\r\n  action: SendUserAction\r\n): IStore {\r\n  switch (action.type) {\r\n    case SEND_USER:\r\n      const change_property = action.payload.value1;\r\n      const newValue = action.payload.value2;\r\n\r\n      if (checkElement(newValue)) {\r\n        if (state.content[0].content) {\r\n          const newElement: IElement | null = parserObject(newValue);\r\n          if (newElement) {\r\n            let newState: IStore = insertNewElement(state, newElement);\r\n            return {\r\n              user: action.payload,\r\n              content: newState.content\r\n            };\r\n          }\r\n        }\r\n      } else {\r\n        let newState: IStore = validate(state, change_property, newValue);\r\n        return {\r\n          user: action.payload,\r\n          content: newState.content\r\n        };\r\n      }\r\n    // eslint-disable-next-line\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction checkElement(value: string): boolean {\r\n  const regExp: RegExp = new RegExp(\"visible\", \"gm\");\r\n  return regExp.test(value);\r\n}\r\n","import * as React from \"react\";\r\nimport { IElement } from \"../interfaces/index\";\r\nimport { getStyle } from \"./PanelComponent\";\r\n\r\nexport interface IInsidePanelComponent {\r\n  data: IElement;\r\n}\r\n\r\nexport class InsidePanelComponent extends React.Component<\r\n  IInsidePanelComponent\r\n> {\r\n  render() {\r\n    return <div style={getStyle(this.props.data)} />;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { IElement } from \"../interfaces/index\";\r\nimport styles from \"./styles/Content.module.css\";\r\n\r\nexport interface IButtonComponent {\r\n  data: IElement;\r\n}\r\n\r\nexport class ButtonComponent extends React.Component<IButtonComponent> {\r\n  render() {\r\n    return (\r\n      <Button\r\n        className={styles.box}\r\n        type=\"primary\"\r\n        style={getStyle(this.props.data)}\r\n      >\r\n        Кнопка\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport const getStyle = (data: IElement) => ({\r\n  width: `${data.props.width}px`,\r\n  height: `${data.props.height}px`\r\n});\r\n","import * as React from \"react\";\r\nimport { IElement } from \"../interfaces/index\";\r\nimport styles from \"./styles/Content.module.css\";\r\n\r\nexport interface ILabelComponent {\r\n  data: IElement;\r\n}\r\n\r\nexport class LabelComponent extends React.Component<ILabelComponent> {\r\n  render() {\r\n    const { props } = this.props.data;\r\n    return <span className={styles.box}>{props.caption}</span>;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { IElement, ElementType } from \"../interfaces/index\";\r\nimport { InsidePanelComponent } from \"./InsidePanelComponent\";\r\nimport { ButtonComponent } from \"./ButtonComponent\";\r\nimport { LabelComponent } from \"./LabelComponent\";\r\n\r\nexport interface IInsideComponent {\r\n  content?: IElement[];\r\n}\r\n\r\nexport class InsideComponent extends React.Component<IInsideComponent> {\r\n  render() {\r\n    const { content } = this.props;\r\n    if (content) {\r\n      const component: React.ReactNode[] = content.map((item, index) => {\r\n        if (item.props.visible) {\r\n          if (item.type === ElementType.panel) {\r\n            return <InsidePanelComponent key={index} data={item} />;\r\n          } else if (item.type === ElementType.button) {\r\n            return <ButtonComponent key={index} data={item} />;\r\n          } else if (item.type === ElementType.label) {\r\n            return <LabelComponent key={index} data={item} />;\r\n          }\r\n        }\r\n        return [];\r\n      });\r\n      return component.filter(Boolean);\r\n    }\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { IElement } from \"../interfaces/index\";\r\nimport { InsideComponent } from \"./InsideComponent\";\r\n\r\nexport interface IPanelComponent {\r\n  data: IElement;\r\n}\r\n\r\nexport class PanelComponent extends React.Component<IPanelComponent> {\r\n  render() {\r\n    return (\r\n      <div style={getStyle(this.props.data)}>\r\n        <InsideComponent content={this.props.data.content} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const getStyle = (data: IElement) => ({\r\n  width: `${data.props.width}px`,\r\n  height: `${data.props.height}px`,\r\n  border: \"10px outset #3d77b8\",\r\n  margin: \"auto\"\r\n});\r\n","import * as React from \"react\";\r\nimport { IElement, ElementType } from \"../interfaces/index\";\r\nimport { PanelComponent } from \"./PanelComponent\";\r\nimport { ButtonComponent } from \"./ButtonComponent\";\r\nimport { LabelComponent } from \"./LabelComponent\";\r\n\r\nexport interface IContent {\r\n  list: IElement[];\r\n}\r\n\r\nexport class Content extends React.Component<IContent> {\r\n  render() {\r\n    const { list } = this.props;\r\n\r\n    const component: React.ReactNode[] = list.map((item, index) => {\r\n      if (item.props.visible) {\r\n        if (item.type === ElementType.panel) {\r\n          return <PanelComponent key={index} data={item} />;\r\n        } else if (item.type === ElementType.button) {\r\n          return <ButtonComponent key={index} data={item} />;\r\n        } else if (item.type === ElementType.label) {\r\n          return <LabelComponent key={index} data={item} />;\r\n        }\r\n      }\r\n      return [];\r\n    });\r\n    return component.filter(Boolean);\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Input, Button } from \"antd\";\r\nimport { IElement } from \"../../interfaces/index\";\r\nimport { Content } from \"../Content\";\r\nimport styles from \"./App.module.css\";\r\n\r\nexport interface IStateModalProps {\r\n  content: IElement[];\r\n}\r\n\r\nexport interface IStateDispatchProps {\r\n  sendUser: (value1: string, value2: string) => void;\r\n}\r\n\r\nexport type IApp = IStateModalProps & IStateDispatchProps;\r\n\r\ninterface IState {\r\n  [key: string]: string;\r\n}\r\n\r\nexport class App extends React.Component<IApp, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      change_property: \"\",\r\n      value: \"\"\r\n    };\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    const { change_property } = this.state;\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div className={styles.box}>\r\n        <div className={styles.panel}>\r\n          <Input\r\n            className={styles.input}\r\n            addonBefore={\"Путь\"}\r\n            placeholder=\"content[0].props.width\"\r\n            defaultValue={\"dsfdsf\"}\r\n            value={change_property}\r\n            name=\"change_property\"\r\n            onChange={this.onChange}\r\n          />\r\n          <Input\r\n            className={styles.input}\r\n            addonBefore={\"Новое значение\"}\r\n            placeholder=\"число, true/false, текст, объект\"\r\n            value={value}\r\n            name=\"value\"\r\n            onChange={this.onChange}\r\n          />\r\n          <Button type=\"primary\" htmlType=\"submit\" onClick={this.onSubmit}>\r\n            Изменить\r\n          </Button>\r\n        </div>\r\n        <div className={styles.content}>\r\n          <Content list={this.props.content} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n\r\n  onSubmit = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    const { sendUser } = this.props;\r\n\r\n    sendUser(this.state.change_property, this.state.value);\r\n  };\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { sendUser } from \"../../action/index\";\r\nimport { IStore } from \"../../interfaces/index\";\r\nimport { App, IStateModalProps, IStateDispatchProps } from \"./App\";\r\n\r\nconst mapStateToProps = (store: IStore): IStateModalProps => ({\r\n  content: store.content\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IStateDispatchProps => ({\r\n  sendUser: (value1: string, value2: string) =>\r\n    dispatch(sendUser(value1, value2))\r\n});\r\n\r\nexport const AppContainer = connect<\r\n  IStateModalProps,\r\n  IStateDispatchProps,\r\n  {},\r\n  IStore\r\n>(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { SEND_USER } from \"../constants/index\";\r\nimport { SendUserAction } from \"../interfaces/index\";\r\n\r\nexport function sendUser(value1: string, value2: string): SendUserAction {\r\n  return {\r\n    type: SEND_USER,\r\n    payload: { value1, value2 }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { store } from \"./store/configureStore\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./Antd.css\";\r\nimport { AppContainer } from \"./components/AppContainer/AppContainer\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <AppContainer />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"App_box__1hExQ\",\"panel\":\"App_panel__1-JAC\",\"input\":\"App_input__3-9pv\",\"content\":\"App_content__160aY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Content_box__RuzQx\"};"],"sourceRoot":""}